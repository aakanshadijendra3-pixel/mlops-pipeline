name: End-to-End MLOps CI/CD Pipeline with MLflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # 👉 Replace this with your MLflow Tracking Server URI or local path if self-hosted
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  # Optional MLflow API key if using hosted MLflow
  MLFLOW_API_TOKEN: ${{ secrets.MLFLOW_API_TOKEN }}

jobs:
  build-train-track:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install nbconvert jupyter mlflow joblib scikit-learn pandas numpy matplotlib

      - name: 🔄 Convert Notebook to Script
        run: |
          jupyter nbconvert --to script "mlruns/ml_flow_model_management.ipynb" --output train_script.py

      - name: 🚀 Train and Log Model with MLflow
        env:
          MLFLOW_TRACKING_URI: ${{ env.MLFLOW_TRACKING_URI }}
          MLFLOW_API_TOKEN: ${{ env.MLFLOW_API_TOKEN }}
        run: |
          echo "Starting model training and MLflow logging..."
          python train_script.py
          echo "✅ Model training & MLflow logging completed!"

      - name: 🧾 Verify Directory Structure
        run: |
          echo "Listing files to confirm model output:"
          ls -R

      - name: 📤 Upload Trained Model
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: |
            model.pkl
            models/
            artifacts/
          if-no-files-found: warn

  deploy:
    runs-on: ubuntu-latest
    needs: build-train-track
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Download Trained Model Artifact
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: ./deployed_model

      - name: 🧩 Simulate Deployment
        run: |
          echo "Deploying trained model..."
          ls -R deployed_model
          echo "✅ Model deployment simulation successful!"

      - name: 🩺 Model Monitoring Setup
        run: |
          echo "Monitoring deployed model performance..."
          echo "Collecting drift metrics, response times, and accuracy (simulated)."
          echo "🚀 Monitoring stage completed successfully!"
